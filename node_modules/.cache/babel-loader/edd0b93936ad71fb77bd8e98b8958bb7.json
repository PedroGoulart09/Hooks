{"ast":null,"code":"var _jsxFileName = \"/home/pedro/Hooks/hooks/src/views/examples/UseRef.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport PageTitle from '../../components/layout/PageTitle';\nimport SectionTitle from '../../components/layout/SectionTitle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UseRef = props => {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const [value2, setValue2] = useState(\"\");\n  const count = useRef(0);\n  const myInput1 = useRef(null);\n  const myInput2 = useRef(null);\n  useEffect(function () {\n    count.current++;\n  }, [value]);\n  useEffect(function () {\n    count.current++;\n    myInput1.current.focus();\n  }, [value2]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"UseRef\",\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n      title: \"Hook UseRef\",\n      subtitle: \"Retorna um objeto mut\\xE1vel com a propriedade .current!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SectionTitle, {\n      title: \"Exercicio 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text\",\n        children: \"Valor: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text\",\n        children: [value, \"[\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text red\",\n        children: count.current\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text\",\n        children: \"]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: myInput2,\n      className: \"input\",\n      onChange: e => setValue(e.target.value),\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SectionTitle, {\n      title: \"Exercicio 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: myInput1,\n      className: \"input\",\n      onChange: e => setValue2(e.target.value),\n      value: value2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UseRef, \"yT+m4rQuWLjnfEYli+7V4vx+HVA=\");\n\n_c = UseRef;\nexport default UseRef;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseRef\");","map":{"version":3,"sources":["/home/pedro/Hooks/hooks/src/views/examples/UseRef.jsx"],"names":["React","useState","useEffect","useRef","PageTitle","SectionTitle","UseRef","props","value","setValue","value2","setValue2","count","myInput1","myInput2","current","focus","e","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AAEtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMW,KAAK,GAAGT,MAAM,CAAC,CAAD,CAApB;AACA,QAAMU,QAAQ,GAAGV,MAAM,CAAC,IAAD,CAAvB;AACA,QAAMW,QAAQ,GAAGX,MAAM,CAAC,IAAD,CAAvB;AAGAD,EAAAA,SAAS,CAAC,YAAY;AAClBU,IAAAA,KAAK,CAACG,OAAN;AAEH,GAHQ,EAGN,CAACP,KAAD,CAHM,CAAT;AAKAN,EAAAA,SAAS,CAAC,YAAY;AAClBU,IAAAA,KAAK,CAACG,OAAN;AACAF,IAAAA,QAAQ,CAACE,OAAT,CAAiBC,KAAjB;AACH,GAHQ,EAGN,CAACN,MAAD,CAHM,CAAT;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI,QAAC,SAAD;AACI,MAAA,KAAK,EAAC,aADV;AAEI,MAAA,QAAQ,EAAC;AAFb;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA,8BACI;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,mBAAwBF,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAM,QAAA,SAAS,EAAC,UAAhB;AAAA,kBAA4BI,KAAK,CAACG;AAAlC;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAYI;AAAO,MAAA,IAAI,EAAC,MAAZ;AACI,MAAA,GAAG,EAAED,QADT;AAEI,MAAA,SAAS,EAAC,OAFd;AAGI,MAAA,QAAQ,EAAEG,CAAC,IAAIR,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASV,KAAV,CAH3B;AAII,MAAA,KAAK,EAAEA;AAJX;AAAA;AAAA;AAAA;AAAA,YAZJ,eAkBI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,YAlBJ,eAmBI;AAAO,MAAA,IAAI,EAAC,MAAZ;AACA,MAAA,GAAG,EAAEK,QADL;AAEI,MAAA,SAAS,EAAC,OAFd;AAGI,MAAA,QAAQ,EAAEI,CAAC,IAAIN,SAAS,CAACM,CAAC,CAACC,MAAF,CAASV,KAAV,CAH5B;AAII,MAAA,KAAK,EAAEE;AAJX;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CA/CD;;GAAMJ,M;;KAAAA,M;AAiDN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport PageTitle from '../../components/layout/PageTitle';\nimport SectionTitle from '../../components/layout/SectionTitle';\n\nconst UseRef = (props) => {\n\n    const [value, setValue] = useState(\"\");\n    const [value2, setValue2] = useState(\"\");\n    const count = useRef(0);\n    const myInput1 = useRef(null);\n    const myInput2 = useRef(null);\n\n\n    useEffect(function () {\n        count.current++\n     \n    }, [value])\n    \n    useEffect(function () {\n        count.current++\n        myInput1.current.focus();\n    }, [value2])\n\n    return (\n        <div className=\"UseRef\">\n            <PageTitle\n                title=\"Hook UseRef\"\n                subtitle=\"Retorna um objeto mutÃ¡vel com a propriedade .current!\"\n            />\n            <SectionTitle title=\"Exercicio 1\" />\n            <div>\n                <span className=\"text\">Valor: </span>\n                <span className=\"text\">{value}[</span>\n                <span className=\"text red\">{count.current}</span>\n                <span className=\"text\">]</span>\n            </div>\n            <input type=\"text\"\n                ref={myInput2}\n                className=\"input\"\n                onChange={e => setValue(e.target.value)}\n                value={value}\n                ></input>\n            <SectionTitle title=\"Exercicio 1\" />\n            <input type=\"text\"\n            ref={myInput1}\n                className=\"input\"\n                onChange={e => setValue2(e.target.value)}\n                value={value2}\n            ></input>\n        </div>\n    )\n}\n\nexport default UseRef\n"]},"metadata":{},"sourceType":"module"}